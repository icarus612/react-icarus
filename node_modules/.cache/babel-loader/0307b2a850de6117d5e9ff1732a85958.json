{"ast":null,"code":"const anime = require('../anime/src/anime.es.js');\n\nconst where = e => {\n  return (e[1] + e[0]) / 2;\n};\n\nconst translateY = (mv, t, crv) => {\n  switch (crv) {\n    case \"cubic\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"easeInOutCubic\"\n      }];\n      break;\n\n    case \"cubicY\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"easeInOutCubic\"\n      }];\n      break;\n\n    case \"cubicX\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"linear\"\n      }];\n      break;\n\n    case \"linear\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 1.5,\n        easing: \"linear\",\n        delay: t\n      }];\n      break;\n\n    case \"linearX\":\n      return [{\n        value: [mv[0], where(mv)],\n        duration: t,\n        easing: \"linear\"\n      }, {\n        value: [where(mv), mv[1]],\n        duration: t,\n        delay: t * 1.5,\n        easing: \"linear\"\n      }];\n      break;\n\n    case \"linearY\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 1.5,\n        easing: \"linear\",\n        delay: t\n      }];\n      break;\n\n    default:\n      return [{\n        value: [mv[0], where(mv)],\n        duration: t,\n        easing: \"linear\"\n      }, {\n        value: [where(mv), mv[1]],\n        duration: t,\n        delay: t * 1.5,\n        easing: \"linear\"\n      }];\n      break;\n  }\n};\n\nconst translateX = (mv, t, crv) => {\n  switch (crv) {\n    case \"cubic\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"easeInOutCubic\"\n      }];\n      break;\n\n    case \"cubicX\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"easeInOutCubic\"\n      }];\n      break;\n\n    case \"cubicY\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"linear\"\n      }];\n      break;\n\n    case \"linear\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 1.5,\n        easing: \"linear\",\n        delay: anime.stagger(t / 2, {\n          start: t\n        })\n      }];\n      break;\n\n    case \"linearX\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 1.5,\n        easing: \"linear\",\n        delay: anime.stagger(t / 2, {\n          start: t\n        })\n      }];\n      break;\n\n    case \"linearY\":\n      return [{\n        value: [mv[0], where(mv)],\n        duration: t,\n        easing: \"linear\"\n      }, {\n        value: [where(mv), mv[1]],\n        duration: t,\n        delay: t * 1.5,\n        easing: \"linear\"\n      }];\n      break;\n\n    default:\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 1.5,\n        easing: \"linear\",\n        delay: t\n      }];\n      break;\n  }\n};\n\nlet fillColor = (e, t, svg) => {\n  let obj = [{\n    value: e[0],\n    duration: t * 1.5 / e.length,\n    easing: \"linear\",\n    delay: anime.stagger(t / 2)\n  }];\n\n  for (let i = 1; i < e.length; i++) {\n    obj.push({\n      value: e[i],\n      duration: t * 1.5 / e.length,\n      easing: \"linear\",\n      delay: t / e.length\n    });\n  }\n\n  return obj;\n};\n\nlet animation = (e, t, svg, mvX, mvY, crv, clr, d) => {\n  let howFar = (s, e, vw) => {\n    let start = document.getElementById(s).getBoundingClientRect();\n    let end = document.getElementById(e).getBoundingClientRect();\n    let x = [(start.left + start.right) / 2 - vw, (end.left + end.right) / 2 - vw];\n    return x;\n  };\n\n  let vw = document.getElementById(\"containerCheck\").getBoundingClientRect().left + 20;\n  let animate = anime.timeline({}).add({\n    targets: svg.children[e],\n    translateX: translateX(howFar(mvX[0], mvX[1], vw), t, crv),\n    translateY: translateY(mvY, t, crv),\n    fill: fillColor(clr, t, svg),\n    backgroundColor: fillColor(clr, t, svg),\n    complete: function (anim) {\n      animation(e, t, svg, mvX, mvY, crv, clr, 0);\n    }\n  }, d);\n  return animate;\n};\n\nlet dotsMovement = (svg, mvX, mvY, t, crv, clr) => {\n  let delay = (el, time, n) => {\n    return 3.5 * time / el.children.length * n;\n  }; //mobile functions for distance\n\n\n  let loopThrough = e => {\n    for (let i = 0; i < e.children.length; i++) {\n      animation(i, t, e, mvX, mvY, crv, clr, delay(e, t, i));\n    }\n  };\n\n  if (typeof svg.length == 'undefined') {\n    loopThrough(svg);\n  } else {\n    for (let j = 0; j < svg.length; j++) {\n      loopThrough(svg[j]);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/ellis/git/github/react-icarus/src/assets/js/dots.js"],"names":["anime","require","where","e","translateY","mv","t","crv","value","duration","easing","delay","translateX","stagger","start","fillColor","svg","obj","length","i","push","animation","mvX","mvY","clr","d","howFar","s","vw","document","getElementById","getBoundingClientRect","end","x","left","right","animate","timeline","add","targets","children","fill","backgroundColor","complete","anim","dotsMovement","el","time","n","loopThrough","j"],"mappings":"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","sourcesContent":["const anime = require('../anime/src/anime.es.js');\n\n  \n  \n  const where = (e) => {\n    return (e[1] + e[0])/2 ;\n  }\n  \n  const translateY = (mv, t, crv) => {\n    switch (crv) {\n  \n      case \"cubic\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"easeInOutCubic\",\n            },\n          ]\n        )\n        break;\n      case \"cubicY\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"easeInOutCubic\",\n            },\n          ]\n        )\n        break;\n      case \"cubicX\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"linear\",\n            },\n          ]\n        )\n        break;\n      case \"linear\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 1.5,\n              easing: \"linear\",\n              delay: t,\n            },\n          ]\n        )\n        break;\n      case \"linearX\":\n        return (\n          [\n            {\n              value: [mv[0], where(mv)],\n              duration: t,\n              easing: \"linear\",\n            },\n            {\n              value: [where(mv), mv[1]],\n              duration: t,\n              delay: t * 1.5,\n              easing: \"linear\",\n            },\n          ]\n        )\n        break;\n      case \"linearY\":\n        return (\n            [\n              {\n                value: [mv[0], mv[1]],\n                duration: t * 1.5,\n                easing: \"linear\",\n                delay: t,\n              },\n            ]\n        )\n        break;\n  \n      default:\n        return (\n            [\n                {\n                    value: [mv[0], where(mv)],\n                    duration: t,\n                    easing: \"linear\",\n                },\n                {\n                    value: [where(mv), mv[1]],\n                    duration: t,\n                    delay: t * 1.5,\n                    easing: \"linear\",\n                },\n            ]\n        )\n        break;\n    }\n  }\n  \n  const translateX = (mv, t, crv) => {\n    switch (crv) {\n      case \"cubic\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"easeInOutCubic\",\n            },\n          ]\n        )\n        break;\n      case \"cubicX\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"easeInOutCubic\",\n            },\n          ]\n        )\n        break;\n      case \"cubicY\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"linear\",\n            },\n          ]\n        )\n        break;\n      case \"linear\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 1.5,\n              easing: \"linear\",\n              delay: anime.stagger(t / 2, {start: t}),\n            },\n          ]\n        )\n        break;\n      case \"linearX\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 1.5,\n              easing: \"linear\",\n              delay: anime.stagger(t / 2, {start: t}),\n            },\n          ]\n        )\n        break;\n      case \"linearY\":\n          return (\n              [\n                  {\n                      value: [mv[0], where(mv)],\n                      duration: t,\n                      easing: \"linear\",\n                  },\n                  {\n                      value: [where(mv), mv[1]],\n                      duration: t,\n                      delay: t * 1.5,\n                      easing: \"linear\",\n                  },\n              ]\n          )\n          break;\n      default:\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 1.5,\n              easing: \"linear\",\n              delay: t,\n            },\n          ]\n        )\n        break;\n    }\n  }\n  \n  let fillColor = (e, t, svg) =>{\n    \n       \n        let obj = [\n            {\n                value: e[0],\n                duration: (t * 1.5)/e.length,\n                easing: \"linear\",\n                delay: anime.stagger(t / 2)\n            },\n        ]\n\n        for (let i = 1; i < e.length; i++){\n            obj.push({\n                value: e[i],\n                duration: (t * 1.5)/e.length,\n                easing: \"linear\",\n                delay: t / e.length\n            });\n        }\n        return obj;\n          \n    \n  }\n  \n  let animation = (e, t, svg, mvX, mvY, crv, clr, d) => {\n      let howFar = (s,e,vw) => {\n        let start = document.getElementById(s).getBoundingClientRect()\n        let end = document.getElementById(e).getBoundingClientRect()\n        let x = [(start.left+start.right)/2-vw, (end.left+end.right)/2-vw];\n        return x\n      }\n      let vw = document.getElementById(\"containerCheck\").getBoundingClientRect().left+20\n      let animate = anime.timeline({\n  \n      }).add({\n          targets: svg.children[e],         \n          translateX: translateX(howFar(mvX[0], mvX[1], vw), t, crv),\n          translateY: translateY(mvY, t, crv),\n          fill: fillColor(clr, t, svg),\n          backgroundColor: fillColor(clr, t, svg),\n          complete: function(anim){\n            animation(e, t, svg, mvX, mvY, crv, clr, 0)\n          },\n      }, d);\n    \n      return animate\n    \n  }\n  \n  let dotsMovement = (svg, mvX, mvY, t, crv, clr) => {\n    let delay = (el,time, n) =>{\n      return 3.5 * time / el.children.length * n\n    }\n    //mobile functions for distance\n    let loopThrough = (e) => {\n      for (let i = 0; i < e.children.length; i++){\n        animation(i, t, e, mvX, mvY, crv, clr, delay(e, t, i))\n      }\n    }\n    if (typeof svg.length == 'undefined') {\n      loopThrough(svg)\n    } else {\n      for (let j = 0; j < svg.length; j++){\n        loopThrough(svg[j])\n      }\n    }\n  }\n  \n  \n  "]},"metadata":{},"sourceType":"module"}
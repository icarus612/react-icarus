{"ast":null,"code":"const addArrClass = (e, c) => {\n  //e is element and c is classes to add\n  for (let i = 0; i < c.length; i++) {\n    i != 0 ? e.setAttributeNS(null, \"class\", \" \") : null; //doesnt add a space to the first element for class name seperation\n\n    e.setAttributeNS(null, \"class\", c[i]); //add the classes\n  }\n};\n\nconst makeSVG = (el, howMany, classSVG, classElement, w, h, apnd) => {\n  let svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svg.setAttributeNS(null, 'width', w);\n  svg.setAttributeNS(null, 'height', h); //checks to see if the cssSVG comes in as a string and adds the class if so. if not it adds all the classes in the array\n\n  typeof classSVG === \"string\" ? svg.setAttributeNS(null, \"class\", classSVG) : addArrClass(svg, classSVG); // default svg animation builder\n\n  switch (el) {\n    default:\n      let dot = [];\n\n      for (let i = 0; i < howMany; i++) {\n        let circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        dot.push(circle);\n        dot[i].className += classElement[i % classElement.length];\n        dot[i].setAttributeNS(null, 'r', 5);\n        svg.appendChild(dot[i]);\n        dot[i].className += \" dot dotNo\".concat(i);\n      }\n\n  }\n\n  return document.querySelector(apnd).appendChild(svg);\n};\n\nconst where = e => {\n  return (e[1] + e[0]) / 2;\n};\n\nconst translateY = (mv, t, crv) => {\n  switch (crv) {\n    case \"cubic\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"easeInOutCubic\"\n      }];\n      break;\n\n    case \"cubicY\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"easeInOutCubic\"\n      }];\n      break;\n\n    case \"cubicX\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"linear\"\n      }];\n      break;\n\n    case \"linear\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 1.5,\n        easing: \"linear\",\n        delay: t\n      }];\n      break;\n\n    case \"linearX\":\n      return [{\n        value: [mv[0], where(mv)],\n        duration: t,\n        easing: \"linear\"\n      }, {\n        value: [where(mv), mv[1]],\n        duration: t,\n        delay: t * 1.5,\n        easing: \"linear\"\n      }];\n      break;\n\n    case \"linearY\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 1.5,\n        easing: \"linear\",\n        delay: t\n      }];\n      break;\n\n    default:\n      return [{\n        value: [mv[0], where(mv)],\n        duration: t,\n        easing: \"linear\"\n      }, {\n        value: [where(mv), mv[1]],\n        duration: t,\n        delay: t * 1.5,\n        easing: \"linear\"\n      }];\n      break;\n  }\n};\n\nconst translateX = (mv, t, crv) => {\n  switch (crv) {\n    case \"cubic\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"easeInOutCubic\"\n      }];\n      break;\n\n    case \"cubicX\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"easeInOutCubic\"\n      }];\n      break;\n\n    case \"cubicY\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 3.5,\n        easing: \"linear\"\n      }];\n      break;\n\n    case \"linear\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 1.5,\n        easing: \"linear\",\n        delay: anime.stagger(t / 2, {\n          start: t\n        })\n      }];\n      break;\n\n    case \"linearX\":\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 1.5,\n        easing: \"linear\",\n        delay: anime.stagger(t / 2, {\n          start: t\n        })\n      }];\n      break;\n\n    case \"linearY\":\n      return [{\n        value: [mv[0], where(mv)],\n        duration: t,\n        easing: \"linear\"\n      }, {\n        value: [where(mv), mv[1]],\n        duration: t,\n        delay: t * 1.5,\n        easing: \"linear\"\n      }];\n      break;\n\n    default:\n      return [{\n        value: [mv[0], mv[1]],\n        duration: t * 1.5,\n        easing: \"linear\",\n        delay: t\n      }];\n      break;\n  }\n};\n\nlet fillColor = (e, t, svg) => {\n  obj = [{\n    value: e[0],\n    duration: t * 1.5 / e.length,\n    easing: \"linear\",\n    delay: anime.stagger(t / 2)\n  }];\n\n  for (let i = 1; i < e.length; i++) {\n    obj.push({\n      value: e[i],\n      duration: t * 1.5 / e.length,\n      easing: \"linear\",\n      delay: t / e.length\n    });\n  }\n\n  return obj;\n};\n\nlet animation = (e, t, svg, mvX, mvY, crv, clr, d) => {\n  let howFar = (s, e, vw) => {\n    let start = document.getElementById(s).getBoundingClientRect();\n    let end = document.getElementById(e).getBoundingClientRect();\n    let x = [(start.left + start.right) / 2 - vw, (end.left + end.right) / 2 - vw];\n    return x;\n  };\n\n  let vw = document.getElementById(\"containerCheck\").getBoundingClientRect().left + 20;\n  let animate = anime.timeline({}).add({\n    targets: svg.children[e],\n    translateX: translateX(howFar(mvX[0], mvX[1], vw), t, crv),\n    translateY: translateY(mvY, t, crv),\n    fill: fillColor(clr, t, svg),\n    backgroundColor: fillColor(clr, t, svg),\n    complete: function (anim) {\n      animation(e, t, svg, mvX, mvY, crv, clr, 0);\n    }\n  }, d);\n  return animate;\n};\n\nlet dotsMovement = (svg, mvX, mvY, t, crv, clr) => {\n  let delay = (el, time, n) => {\n    return 3.5 * time / el.children.length * n;\n  }; //mobile functions for distance\n\n\n  let loopThrough = e => {\n    for (i = 0; i < e.children.length; i++) {\n      animation(i, t, e, mvX, mvY, crv, clr, delay(e, t, i));\n    }\n  };\n\n  if (typeof svg.length == 'undefined') {\n    loopThrough(svg);\n  } else {\n    for (j = 0; j < svg.length; j++) {\n      loopThrough(svg[j]);\n    }\n  }\n};","map":{"version":3,"sources":["/Users/ellis/git/github/react-icarus/src/assets/js/dots.js"],"names":["addArrClass","e","c","i","length","setAttributeNS","makeSVG","el","howMany","classSVG","classElement","w","h","apnd","svg","document","createElementNS","dot","circle","push","className","appendChild","querySelector","where","translateY","mv","t","crv","value","duration","easing","delay","translateX","anime","stagger","start","fillColor","obj","animation","mvX","mvY","clr","d","howFar","s","vw","getElementById","getBoundingClientRect","end","x","left","right","animate","timeline","add","targets","children","fill","backgroundColor","complete","anim","dotsMovement","time","n","loopThrough","j"],"mappings":"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","sourcesContent":["const addArrClass = (e, c) => { //e is element and c is classes to add\n    for (let i = 0; i < c.length; i++) {\n      i != 0 ? e.setAttributeNS(null, \"class\", \" \"): null; //doesnt add a space to the first element for class name seperation\n      e.setAttributeNS(null, \"class\", c[i]); //add the classes\n    }\n  }\n  \n  const makeSVG = (el, howMany, classSVG, classElement, w, h, apnd) => {\n    let svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svg.setAttributeNS(null, 'width', w);\n    svg.setAttributeNS(null, 'height', h);\n    //checks to see if the cssSVG comes in as a string and adds the class if so. if not it adds all the classes in the array\n    typeof classSVG === \"string\" ?  svg.setAttributeNS(null, \"class\", classSVG) : addArrClass(svg, classSVG);\n    // default svg animation builder\n    switch (el){\n  \n  \n      default:\n        let dot = []\n        for (let i = 0; i < howMany; i++){\n          let circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n          dot.push(circle);\n          dot[i].className += classElement[i % classElement.length];\n         \n          dot[i].setAttributeNS(null, 'r', 5);\n          svg.appendChild(dot[i]);\n          dot[i].className +=  ` dot dotNo${i}`;\n        }\n    }\n    return document.querySelector(apnd).appendChild(svg);\n  }\n  \n  \n  const where = (e) => {\n    return (e[1] + e[0])/2 ;\n  }\n  \n  const translateY = (mv, t, crv) => {\n    switch (crv) {\n  \n      case \"cubic\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"easeInOutCubic\",\n            },\n          ]\n        )\n        break;\n      case \"cubicY\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"easeInOutCubic\",\n            },\n          ]\n        )\n        break;\n      case \"cubicX\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"linear\",\n            },\n          ]\n        )\n        break;\n      case \"linear\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 1.5,\n              easing: \"linear\",\n              delay: t,\n            },\n          ]\n        )\n        break;\n      case \"linearX\":\n        return (\n          [\n            {\n              value: [mv[0], where(mv)],\n              duration: t,\n              easing: \"linear\",\n            },\n            {\n              value: [where(mv), mv[1]],\n              duration: t,\n              delay: t * 1.5,\n              easing: \"linear\",\n            },\n          ]\n        )\n        break;\n      case \"linearY\":\n        return (\n            [\n              {\n                value: [mv[0], mv[1]],\n                duration: t * 1.5,\n                easing: \"linear\",\n                delay: t,\n              },\n            ]\n        )\n        break;\n  \n      default:\n        return (\n            [\n                {\n                    value: [mv[0], where(mv)],\n                    duration: t,\n                    easing: \"linear\",\n                },\n                {\n                    value: [where(mv), mv[1]],\n                    duration: t,\n                    delay: t * 1.5,\n                    easing: \"linear\",\n                },\n            ]\n        )\n        break;\n    }\n  }\n  \n  const translateX = (mv, t, crv) => {\n    switch (crv) {\n      case \"cubic\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"easeInOutCubic\",\n            },\n          ]\n        )\n        break;\n      case \"cubicX\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"easeInOutCubic\",\n            },\n          ]\n        )\n        break;\n      case \"cubicY\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 3.5,\n              easing: \"linear\",\n            },\n          ]\n        )\n        break;\n      case \"linear\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 1.5,\n              easing: \"linear\",\n              delay: anime.stagger(t / 2, {start: t}),\n            },\n          ]\n        )\n        break;\n      case \"linearX\":\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 1.5,\n              easing: \"linear\",\n              delay: anime.stagger(t / 2, {start: t}),\n            },\n          ]\n        )\n        break;\n      case \"linearY\":\n          return (\n              [\n                  {\n                      value: [mv[0], where(mv)],\n                      duration: t,\n                      easing: \"linear\",\n                  },\n                  {\n                      value: [where(mv), mv[1]],\n                      duration: t,\n                      delay: t * 1.5,\n                      easing: \"linear\",\n                  },\n              ]\n          )\n          break;\n      default:\n        return (\n          [\n            {\n              value: [mv[0], mv[1]],\n              duration: t * 1.5,\n              easing: \"linear\",\n              delay: t,\n            },\n          ]\n        )\n        break;\n    }\n  }\n  \n  let fillColor = (e, t, svg) =>{\n    \n       \n        obj = [\n            {\n                value: e[0],\n                duration: (t * 1.5)/e.length,\n                easing: \"linear\",\n                delay: anime.stagger(t / 2)\n            },\n        ]\n\n        for (let i = 1; i < e.length; i++){\n            obj.push({\n                value: e[i],\n                duration: (t * 1.5)/e.length,\n                easing: \"linear\",\n                delay: t / e.length\n            });\n        }\n        return obj;\n          \n    \n  }\n  \n  let animation = (e, t, svg, mvX, mvY, crv, clr, d) => {\n      let howFar = (s,e,vw) => {\n        let start = document.getElementById(s).getBoundingClientRect()\n        let end = document.getElementById(e).getBoundingClientRect()\n        let x = [(start.left+start.right)/2-vw, (end.left+end.right)/2-vw];\n        return x\n      }\n      let vw = document.getElementById(\"containerCheck\").getBoundingClientRect().left+20\n      let animate = anime.timeline({\n  \n      }).add({\n          targets: svg.children[e],         \n          translateX: translateX(howFar(mvX[0], mvX[1], vw), t, crv),\n          translateY: translateY(mvY, t, crv),\n          fill: fillColor(clr, t, svg),\n          backgroundColor: fillColor(clr, t, svg),\n          complete: function(anim){\n            animation(e, t, svg, mvX, mvY, crv, clr, 0)\n          },\n      }, d);\n    \n      return animate\n    \n  }\n  \n  let dotsMovement = (svg, mvX, mvY, t, crv, clr) => {\n    let delay = (el,time, n) =>{\n      return 3.5 * time / el.children.length * n\n    }\n    //mobile functions for distance\n    let loopThrough = (e) => {\n      for (i = 0; i < e.children.length; i++){\n        animation(i, t, e, mvX, mvY, crv, clr, delay(e, t, i))\n      }\n    }\n    if (typeof svg.length == 'undefined') {\n      loopThrough(svg)\n    } else {\n      for (j = 0; j < svg.length; j++){\n        loopThrough(svg[j])\n      }\n    }\n  }\n  \n  \n  "]},"metadata":{},"sourceType":"module"}